name: Deploy Backend Amoure to Cloud Run

on:
  push:
    branches:
      - "dev"


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"


# GCP_SA_KEY = Connection GCP with Github Actions
# GCP_PROJECT_ID = Project ID in GCP
# GCP_REGION = Region of the GCP
# GCR_IMAGE_NAME = Name of the Docker image in Artifact Registry
# CLOUD_RUN_SERVICE_NAME = Name of the Cloud Run service
# CLOUD_RUN_REGION = Region of the Cloud Run service
# CLOUD_SQL_CONNECTION_NAME = Connection name of the Cloud SQL instance
# PORT = Port of the application
# IP_ML_DEPLOY = IP of the ML deploy FastAPI in Compute Engine
# URL_ML_DEPLOY = URL of the ML deploy FastAPI in Cloud Run
# DATABASE_URL = URL of the database
# POSTGRES_PORT = Port of the database
# POSTGRES_DB = Name of the database
# POSTGRES_PASSWORD = Password of the database
# POSTGRES_USER = User of the database
# POSTGRES_HOST = Host of the database
# ACCESS_TOKEN_SECRET = Secret of the access token JWT
# REFRESH_TOKEN_SECRET = Secret of the refresh token JWT
# ORIGIN = Origin of the CORS
# CREDENTIALS = Credentials of the CORS

      - name: Clear Docker cache
        run: docker builder prune -f

      - name: Configure Docker to use the gcloud command-line tool
        run: |-
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image
        run: |-
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev
          # build -t
          docker build --platform linux/amd64 -t asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCR_IMAGE_NAME }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}:latest ./
          docker push asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCR_IMAGE_NAME }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        env:
          # Cloud Run
          CLOUD_RUN_SERVICE_NAME: ${{ secrets.CLOUD_RUN_SERVICE_NAME }}
          CLOUD_RUN_REGION: ${{ secrets.CLOUD_RUN_REGION }}

          CLOUD_SQL_CONNECTION_NAME: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
          ENV: dev
          PORT: ${{ secrets.PORT }}
          IP_ML_DEPLOY: ${{ secrets.IP_ML_DEPLOY }}
          IP_TRYON_DEPLOY: ${{ secrets.IP_TRYON_DEPLOY }}

          # Cloud Storage Bucket
          PRODUCT_BUCKET_NAME: ${{ secrets.IMG_BUCKET_NAME }}
          GCP_BUCKET_SERVICE_ACCOUNT: ${{ secrets.GCP_BUCKET_SERVICE_ACCOUNT }}

          # Database
          DATABASE_URL: ${{ secrets.DB_URL }}
          POSTGRES_PORT: ${{ secrets.DB_PORT }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_HOST: ${{ secrets.DB_HOST }}
          
          # Token JWT
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

          #CORS
          ORIGIN: ${{ secrets.ORIGIN }}
          CREDENTIALS: ${{ secrets.CREDENTIALS }}

        run: |
          gcloud run deploy $CLOUD_RUN_SERVICE_NAME \
            --image asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCR_IMAGE_NAME }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}:latest \
            --platform managed \
            --region $CLOUD_RUN_REGION \
            --set-cloudsql-instances $CLOUD_SQL_CONNECTION_NAME \
            --set-env-vars ENV=$ENV,IP_ML_DEPLOY=$IP_ML_DEPLOY,IP_TRYON_DEPLOY=$IP_TRYON_DEPLOY,PRODUCT_BUCKET_NAME=$PRODUCT_BUCKET_NAME,DATABASE_URL=$DATABASE_URL,POSTGRES_PORT=$POSTGRES_PORT,POSTGRES_DB=$POSTGRES_DB,POSTGRES_PASSWORD=$POSTGRES_PASSWORD,POSTGRES_USER=$POSTGRES_USER,POSTGRES_HOST=$POSTGRES_HOST,ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET,REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET,ORIGIN=$ORIGIN,CREDENTIALS=$CREDENTIALS \
            --allow-unauthenticated \
            --max-instances=2
