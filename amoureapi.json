{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation Amoure",
        "version": "1.0.0",
        "description": "OpenAPI Swagger Documentation for Amoure Back-End RESTful API",
        "contact": {
            "name": "Alfan Andika",
            "email": "alfanandika65@gmail.com"
        }
    },
    "servers": [
        {
            "url": "URL Backend Deployed Here",
            "description": "Production server"
        },
        {
            "url": "http://localhost:3000",
            "description": "Development server"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication routes"
        },
        {
            "name": "Users",
            "description": "Users routes"
        },
        {
            "name": "Products",
            "description": "Products routes"
        },
        {
            "name": "Carts",
            "description": "Carts routes"
        },
        {
            "name": "Rents",
            "description": "Rents routes"
        },
        {
            "name": "Wishlists",
            "description": "Wishlists routes"
        },
        {
            "name": "Reviews",
            "description": "Reviews routes"
        },
        {
            "name": "Search",
            "description": "Search routes"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": ["Auth", "Users"],
                "summary": "User signup",
                "description": "Signup new user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUser"
                            },
                            "examples": {
                                "user": {
                                    "description": "Example for User Signup",
                                    "value": {
                                        "email": "john.doe@example.com",
                                        "password": "i5r%B2#X1A",
                                        "userType": "user"
                                    }
                                },
                                "owner": {
                                    "description": "Example for Owner Signup",
                                    "value": {
                                        "email": "jane.doe@example.com",
                                        "password": "}2DFKW#Hib",
                                        "userType": "owner"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "user": {
                                        "description": "Success register as User",
                                        "value": {
                                            "status": "success",
                                            "message": "User register successfully",
                                            "data": {
                                                "id": "b65c17ae-2194-42fe-8501-e51a3e23384a"
                                            }
                                        }
                                    },
                                    "owner": {
                                        "description": "Success register as Owner",
                                        "value": {
                                            "status": "success",
                                            "message": "Owner register successfully",
                                            "data": {
                                                "id": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed register user, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "email, password, userType empty": {
                                        "description": "Register fail because email and password empty",
                                        "value": {
                                            "status": "fail",
                                            "message": "Email and password can't be empty",
                                            "errors": [
                                                {
                                                    "field": "email",
                                                    "message": "Email is required"
                                                },
                                                {
                                                    "field": "password",
                                                    "message": "Password is required"
                                                },
                                                {
                                                    "field": "userType",
                                                    "message": "User Type is required"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "Database connection error": {
                                        "description": "Register fail because database connection issue",
                                        "value": {
                                            "status": "error",
                                            "message": "Internal server error",
                                            "errors": [
                                                {
                                                    "field": "database",
                                                    "message": "Fail to connect to database"
                                                }
                                            ]
                                        }
                                    },
                                    "Unexpected server error": {
                                        "description": "Register fail because unexpected server error",
                                        "value": {
                                            "status": "error",
                                            "message": "Internal server error",
                                            "errors": [
                                                {
                                                    "field": "server",
                                                    "message": "Unexpected conditions server error encountered"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Auth", "Users"],
                "summary": "User login",
                "description": "Login user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUser"
                            },
                            "examples": {
                                "user": {
                                    "description": "Example login as User",
                                    "value": {
                                        "email": "john.doe@example.com",
                                        "password": "i5r%B2#X1A",
                                        "userType": "user"
                                    }
                                },
                                "owner": {
                                    "description": "Example login as Owner",
                                    "value": {
                                        "email": "jane.doe@example.com",
                                        "password": "}2DFKW#Hib",
                                        "userType": "owner"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessLoginUser"
                                },
                                "examples": {
                                    "user": {
                                        "description": "Success login as User",
                                        "value": {
                                            "status": "success",
                                            "message": "Login successfully",
                                            "data": {
                                                "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                                                "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                "userType": "user"
                                            }
                                        }
                                    },
                                    "owner": {
                                        "description": "Success login as Owner",
                                        "value": {
                                            "status": "success",
                                            "message": "Login successfully",
                                            "data": {
                                                "accessToken": "eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.bQTnz6AuMJvmXXQsVPrxeQNvzDkimo7VNXxHeSBfClLufmCVZRUuyTwJF311JHuh",
                                                "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc",
                                                "userType": "owner"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed login user, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "email and password empty": {
                                        "description": "Login fail because email and password empty",
                                        "value": {
                                            "status": "fail",
                                            "message": "Email and password can't be empty",
                                            "errors": [
                                                {
                                                    "field": "email",
                                                    "message": "Email is required"
                                                },
                                                {
                                                    "field": "password",
                                                    "message": "Password is required"
                                                }
                                            ]
                                        }
                                    },
                                    "wrong password": {
                                        "description": "login fail because wrong password",
                                        "value": {
                                            "status": "fail",
                                            "message": "Bad request",
                                            "errors": [
                                                {
                                                    "field": "password",
                                                    "message": "Wrong password"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed login user, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "email not found": {
                                        "description": "login fail because email not found",
                                        "value": {
                                            "status": "fail",
                                            "message": "Not Found",
                                            "errors": [
                                                {
                                                    "field": "email",
                                                    "message": "Email not found"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "Database connection error": {
                                        "description": "Register fail because database connection issue",
                                        "value": {
                                            "status": "error",
                                            "message": "Internal server error",
                                            "errors": [
                                                {
                                                    "field": "database",
                                                    "message": "Fail to connect to database"
                                                }
                                            ]
                                        }
                                    },
                                    "Unexpected server error": {
                                        "description": "Register fail because unexpected server error",
                                        "value": {
                                            "status": "error",
                                            "message": "Internal server error",
                                            "errors": [
                                                {
                                                    "field": "server",
                                                    "message": "Unexpected conditions server error encountered"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "tags": ["Auth", "Users"],
                "summary": "User logout",
                "description": "Logout user from the system/app",
                "responses": {
                    "200": {
                        "description": "User logout successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success"
                                },
                                "examples": {
                                    "success": {
                                        "description": "Success logout",
                                        "value": {
                                            "status": "success",
                                            "message": "Logout successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/token/refresh": {
            "get": {
                "tags": ["Auth"],
                "summary": "Refresh token",
                "description": "Refresh JWT token to get a new access token. Refresh token is stored in cookie",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "refresh token not provided": {
                                        "description": "Fail to refresh token because refresh token not provided on cookie",
                                        "value": {
                                            "status": "fail",
                                            "message": "Unauthorized. "
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "invalid refresh token": {
                                        "description": "Fail to refresh token because refresh token is invalid",
                                        "value": {
                                            "status": "fail",
                                            "message": "Can't find who the owner of this token"
                                        }
                                    },
                                    "decode error": {
                                        "description": "Fail to refresh token because decode error",
                                        "value": {
                                            "status": "fail",
                                            "message": "Can't decode or compare token with secret"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Get all users",
                "description": "Get all user data. Requires valid access token",
                "parameters": [
                    {
                        "name": "fullName",
                        "in": "query",
                        "description": "Get all user data by full name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "examples": {
                            "User 1": {
                                "description": "Get all user data by fullName",
                                "value": "John Doe"
                            },
                            "User 2": {
                                "description": "Get all user data by fullName",
                                "value": "Jane Doe"
                            }
                        }
                    },
                    {
                        "name": "userType",
                        "in": "query",
                        "description": "Get all user data by user type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "examples": {
                            "user": {
                                "description": "Get all user data with userType user",
                                "value": "user"
                            },
                            "owner": {
                                "description": "Get all user data with userType owner",
                                "value": "owner"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve all user data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetAllUser"
                                },
                                "examples": {
                                    "All users": {
                                        "description": "Get all user data successfully",
                                        "value": {
                                            "status": "success",
                                            "message": "Get all user data",
                                            "data": {
                                                "users": [
                                                    {
                                                        "id": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                        "fullName": "John Doe",
                                                        "email": "john.doe@example.com",
                                                        "addressDetail": "Jl Kirai Indah 11",
                                                        "province": "DKI Jakarta",
                                                        "city": "Jakarta",
                                                        "district": "Jakarta Utara",
                                                        "postalCode": "13790",
                                                        "phoneNumber": "081210292912",
                                                        "birthDate": "2003-01-20",
                                                        "userType": "user"
                                                    },
                                                    {
                                                        "id": "62e6dfe3-2337-4b09-ae48-a565c9e716dc",
                                                        "fullName": "Bassike",
                                                        "email": "jane.doe@example.com",
                                                        "province": "DKI Jakarta",
                                                        "city": "Jakarta",
                                                        "district": "Jakarta Selatan",
                                                        "postalCode": "12740",
                                                        "phoneNumber": "081234567890",
                                                        "birthDate": "2002-02-25",
                                                        "userType": "owner"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get user/owner data by user id",
                "description": "Get user by spesific user id. Requires valid access token",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve user data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetUserId"
                                },
                                "examples": {
                                    "User 1": {
                                        "description": "Sample user 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get user data by user id",
                                            "data": {
                                                "user": {
                                                    "id": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                    "fullName": "John Doe",
                                                    "email": "john.doe@example.com",
                                                    "addressDetail": "Jl Kirai Indah 11",
                                                    "province": "DKI Jakarta",
                                                    "city": "Jakarta",
                                                    "district": "Jakarta Utara",
                                                    "postalCode": "13790",
                                                    "phoneNumber": "081210292912",
                                                    "birthDate": "2003-01-20",
                                                    "userType": "user"
                                                }
                                            }
                                        }
                                    },
                                    "Owner 1": {
                                        "description": "Sample owner 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get owner data by user id",
                                            "data": {
                                                "owner": {
                                                    "id": "62e6dfe3-2337-4b09-ae48-a565c9e716dc",
                                                    "fullName": "Jane Doe",
                                                    "email": "jane.doe@example.com",
                                                    "addressDetail": "Jl. Kenanga 11",
                                                    "province": "DKI Jakarta",
                                                    "city": "Jakarta",
                                                    "district": "Jakarta Selatan",
                                                    "postalCode": "12740",
                                                    "phoneNumber": "081234567890",
                                                    "birthDate": "2002-02-25",
                                                    "userType": "owner"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorUserNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": ["Users"],
                "summary": "Update user/owner data by user id",
                "description": "Update user by spesific user id. Requires valid access token",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserId"
                            },
                            "examples": {
                                "User 1": {
                                    "description": "Sample user 1",
                                    "value": {
                                        "fullName": "John Doe Updated",
                                        "email": "john.doe.updated@example.com",
                                        "addressDetail": "Jl Kirai Indah 13",
                                        "province": "DKI Jakarta",
                                        "city": "Jakarta",
                                        "district": "Jakarta Selatan",
                                        "postalCode": "12740",
                                        "phoneNumber": "081210292913",
                                        "birthDate": "2000-04-17"
                                    }
                                },
                                "Owner 1": {
                                    "description": "Sample owner 1",
                                    "value": {
                                        "fullName": "Jane Doe Updated",
                                        "email": "jane.doe@example.com",
                                        "addressDetail": "Jl. Kenanga 13",
                                        "province": "DKI Jakarta",
                                        "city": "Jakarta",
                                        "district": "Jakarta Selatan",
                                        "postalCode": "12740",
                                        "phoneNumber": "081234567200",
                                        "birthDate": "2002-02-20"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User data updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessUpdateUserId"
                                },
                                "examples": {
                                    "User 1": {
                                        "description": "Sample user 1",
                                        "value": {
                                            "status": "success",
                                            "message": "updated user data by id",
                                            "data": {
                                                "id": "b65c17ae-2194-42fe-8501-e51a3e23384a"
                                            }
                                        }
                                    },
                                    "Owner 1": {
                                        "description": "Sample owner 1",
                                        "value": {
                                            "status": "success",
                                            "message": "updated owner data by id",
                                            "data": {
                                                "id": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Update user data failed, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "fullName and addressDetail empty": {
                                        "description": "Failed to update user data because full name and address detail empty",
                                        "value": {
                                            "status": "fail",
                                            "message": "Validation error",
                                            "errors": [
                                                {
                                                    "field": "fullName",
                                                    "message": "Full name is required"
                                                },
                                                {
                                                    "field": "addressDetail",
                                                    "message": "Address detail is required"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorUserNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete user/owner data by user id",
                "description": "Delete user by spesific user id. Requires valid access token",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted user data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "User 1": {
                                        "description": "Sample user 1",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted user data by id",
                                            "data": {
                                                "id": "b65c17ae-2194-42fe-8501-e51a3e23384a"
                                            }
                                        }
                                    },
                                    "Owner 1": {
                                        "description": "Sample owner 1",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted owner data by id",
                                            "data": {
                                                "id": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorUserNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": ["Products"],
                "summary": "Get all products",
                "description": "Get all products from application",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Get all product data by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "examples": {
                            "Product 1": {
                                "description": "Get all product data by name",
                                "value": "Red Dress"
                            },
                            "Product 2": {
                                "description": "Get all product data by name",
                                "value": "Pink Dress"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve all product data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetAllProduct"
                                },
                                "examples": {
                                    "All product": {
                                        "description": "Get all product data successfully",
                                        "value": {
                                            "status": "success",
                                            "message": "Get all product data",
                                            "data": {
                                                "products": [
                                                    {
                                                        "id": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66",
                                                        "productName": "Red Dress",
                                                        "ownerName": "Bassike",
                                                        "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/3a/BSSK7.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/3a/BSSK7.jpg?auto=webp"],
                                                        "description": "Red Dress for party",
                                                        "styleNotes": "Utilitarian pockets add a trendy touch to these tie-waist trouser shorts frombassike topped with a stylish paperbag waist.",
                                                        "retailPrice": 3000000,
                                                        "rentPrice": 200000,
                                                        "available": true,
                                                        "color": "Red",
                                                        "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                                        "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                                    },
                                                    {
                                                        "id": "57826a0c-c803-4d79-8707-5e8174c6eba3",
                                                        "productName": "Pink Dress",
                                                        "ownerName": "Bassike",
                                                        "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/da/SMY99.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/da/SMY99.jpg?auto=webp"],
                                                        "description": "Pink Dress for party",
                                                        "styleNotes": "Rainbow tie-dye brightens the laid-back appeal of these lounge-ready shorts from Show Me Your Mumu.MatchingSweatshirtalso available.",
                                                        "retailPrice": 2500000,
                                                        "rentPrice": 150000,
                                                        "available": false,
                                                        "color": "Pink",
                                                        "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                                        "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": ["Products"],
                "summary": "Create new product",
                "description": "add new product to the application. Owner only",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddProduct"
                            },
                            "examples": {
                                "Product 1": {
                                    "description": "Example for Add Product",
                                    "value": {
                                        "productName": "Red Dress",
                                        "ownerName": "Bassike",
                                        "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/3a/BSSK7.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/3a/BSSK7.jpg?auto=webp"],
                                        "description": "Red Dress for party",
                                        "styleNotes": "Utilitarian pockets add a trendy touch to these tie-waist trouser shorts frombassike topped with a stylish paperbag waist.",
                                        "retailPrice": 3000000,
                                        "rentPrice": 200000,
                                        "available": true,
                                        "color": "Red",
                                        "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                        "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                    }
                                },
                                "Product 2": {
                                    "description": "Example for Add Product",
                                    "value": {
                                        "productName": "Pink Dress",
                                        "ownerName": "Bassike",
                                        "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/da/SMY99.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/da/SMY99.jpg?auto=webp"],
                                        "description": "Pink Dress for party",
                                        "styleNotes": "Rainbow tie-dye brightens the laid-back appeal of these lounge-ready shorts from Show Me Your Mumu.MatchingSweatshirtalso available.",
                                        "retailPrice": 2500000,
                                        "rentPrice": 150000,
                                        "available": true,
                                        "color": "Pink",
                                        "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                        "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Add product successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddProduct"
                                },
                                "examples": {
                                    "Product 1": {
                                        "description": "Success to add product",
                                        "value": {
                                            "status": "success",
                                            "message": "Product add successfully",
                                            "data": {
                                                "id": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66"
                                            }
                                        }
                                    },
                                    "Product 2": {
                                        "description": "Success to add product",
                                        "value": {
                                            "status": "success",
                                            "message": "Product add successfully",
                                            "data": {
                                                "id": "57826a0c-c803-4d79-8707-5e8174c6eba3"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed add product, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "productName, ownerName, imgProduct, description, styleNotes, retailPrice, rentPrice, available, color, categoryId, userId empty": {
                                        "description": "Fail to add product because productName, ownerNmae imgProduct, description, styleNotes, retailPrice, rentPrice, available, color, categoryId, userId empty",
                                        "value": {
                                            "status": "fail",
                                            "message": "name, image product, description, rent price, stock, size and color can't be empty",
                                            "errors": [
                                                {
                                                    "field": "productName",
                                                    "message": "productName is required"
                                                },
                                                {
                                                    "field": "ownerName",
                                                    "message": "ownerName is required"
                                                },
                                                {
                                                    "field": "imgProduct",
                                                    "message": "imgProduct is required"
                                                },
                                                {
                                                    "field": "description",
                                                    "message": "description is required"
                                                },
                                                {
                                                    "field": "styleNotes",
                                                    "message": "styleNotes is required"
                                                },
                                                {
                                                    "field": "rentPrice",
                                                    "message": "rentPrice is required"
                                                },
                                                {
                                                    "field": "available",
                                                    "message": "stock is required"
                                                },
                                                {
                                                    "field": "color",
                                                    "message": "color is required"
                                                },
                                                {
                                                    "field": "categoryId",
                                                    "message": "category is required"
                                                },
                                                {
                                                    "field": "userId",
                                                    "message": "userId is required"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "Database connection error": {
                                        "description": "Register fail because database connection issue",
                                        "value": {
                                            "status": "error",
                                            "message": "Internal server error",
                                            "errors": [
                                                {
                                                    "field": "database",
                                                    "message": "Fail to connect to database"
                                                }
                                            ]
                                        }
                                    },
                                    "Unexpected server error": {
                                        "description": "Register fail because unexpected server error",
                                        "value": {
                                            "status": "error",
                                            "message": "Internal server error",
                                            "errors": [
                                                {
                                                    "field": "server",
                                                    "message": "Unexpected conditions server error encountered"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{categoryId}": {
            "get": {
                "tags": ["Products"],
                "summary": "Get product by category id",
                "description": "Get product by spesific category id",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CategoryId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved category data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetCategoryId"
                                },
                                "examples": {
                                    "Category 1": {
                                        "description": "Sample category 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get category by id",
                                            "data": {
                                                "category": {
                                                    "id": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                                    "categoriesName": "Dresses"
                                                }
                                            }
                                        }
                                    },
                                    "Category 2": {
                                        "description": "Sample category 2",
                                        "value": {
                                            "status": "success",
                                            "message": "Get category by id",
                                            "data": {
                                                "category": {
                                                    "id": "1d406a46-5ebf-4c1f-b270-06759cf6e3fa",
                                                    "categoriesName": "Accessories"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorCategoryNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{userId}/owner": {
            "get": {
                "tags": ["Products"],
                "summary": "Get product owner by user id. For user",
                "description": "Get product in owner catalog by spesific user id",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved product data owner successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetProductOwnerId"
                                },
                                "examples": {
                                    "Owner 1": {
                                        "description": "Sample owner 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get product by id",
                                            "data": {
                                                "product": {
                                                    "userid": "62e6dfe3-2337-4b09-ae48-a565c9e716dc",
                                                    "userType": "owner",
                                                    "productId": ["86b0a4b1-4d58-44e2-bffa-2a9fd659ce66", "57826a0c-c803-4d79-8707-5e8174c6eba3"]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorOwnerNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{productId}": {
            "get": {
                "tags": ["Products"],
                "summary": "Get product by product id",
                "description": "Get product by spesific product id, for user see one product detail.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved product data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetProductId"
                                },
                                "examples": {
                                    "Product 1": {
                                        "description": "Sample product 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get product by id",
                                            "data": {
                                                "product": {
                                                    "id": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66",
                                                    "productName": "Red Dress",
                                                    "ownerName": "Bassike",
                                                    "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/3a/BSSK7.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/3a/BSSK7.jpg?auto=webp"],
                                                    "description": "Red Dress for party",
                                                    "styleNotes": "Utilitarian pockets add a trendy touch to these tie-waist trouser shorts frombassike topped with a stylish paperbag waist.",
                                                    "retailPrice": 3000000,
                                                    "rentPrice": 200000,
                                                    "available": true,
                                                    "color": "Red",
                                                    "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                                    "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                                }
                                            }
                                        }
                                    },
                                    "Product 2": {
                                        "description": "Sample product 2",
                                        "value": {
                                            "status": "success",
                                            "message": "Get product by id",
                                            "data": {
                                                "category": {
                                                    "id": "57826a0c-c803-4d79-8707-5e8174c6eba3",
                                                    "productName": "Pink Dress",
                                                    "ownerName": "Bassike",
                                                    "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/da/SMY99.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/da/SMY99.jpg?auto=webp"],
                                                    "description": "Pink Dress for party",
                                                    "styleNotes": "Rainbow tie-dye brightens the laid-back appeal of these lounge-ready shorts from Show Me Your Mumu.MatchingSweatshirtalso available.",
                                                    "retailPrice": 2500000,
                                                    "rentPrice": 150000,
                                                    "available": true,
                                                    "color": "Pink",
                                                    "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8",
                                                    "userId": "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorCategoryNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": ["Products"],
                "summary": "Update product by product id",
                "description": "Update product by spesific product id. Owner only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductId"
                            },
                            "examples": {
                                "Product 1": {
                                    "description": "Sample product 1",
                                    "value": {
                                        "productName": "Red Dress Updated",
                                        "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/3a/BSSK7.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/3a/BSSK7.jpg?auto=webp"],
                                        "description": "Red Dress for party updated",
                                        "styleNotes": "Utilitarian pockets add a trendy touch to these tie-waist trouser shorts frombassike topped with a stylish paperbag waist.",
                                        "retailPrice": 2500000,
                                        "rentPrice": 150000,
                                        "available": true,
                                        "color": "Red",
                                        "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8"
                                    }
                                },
                                "Product 2": {
                                    "description": "Sample product 2",
                                    "value": {
                                        "productName": "Pink Dress Updated",
                                        "imgProduct": ["https://pc-ap.rtrcdn.com/productimages/front/1080x/da/SMY99.jpg?auto=webp", "https://pc-ap.rtrcdn.com/productimages/back/1080x/da/SMY99.jpg?auto=webp"],
                                        "description": "Pink Dress for party updated",
                                        "styleNotes": "Rainbow tie-dye brightens the laid-back appeal of these lounge-ready shorts from Show Me Your Mumu.MatchingSweatshirtalso available.",
                                        "retailPrice": 3000000,
                                        "rentPrice": 200000,
                                        "available": true,
                                        "color": "Pink",
                                        "categoryId": "d44fd310-0fd4-422e-b77f-026abdd131f8"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated product data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "Product 1": {
                                        "description": "Successfully updated product data",
                                        "value": {
                                            "status": "success",
                                            "message": "updated product data by id",
                                            "data": {
                                                "id": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66"
                                            }
                                        }
                                    },
                                    "Product 2": {
                                        "description": "Successfully updated product data",
                                        "value": {
                                            "status": "success",
                                            "message": "updated product data by id",
                                            "data": {
                                                "id": "57826a0c-c803-4d79-8707-5e8174c6eba3"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Update product data failed, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "productName, imgProduct, description, styleNotes, retailPrice, rentPrice, available, color, categoryId empty": {
                                        "description": "Failed to update product data because productName, imgProduct, description, styleNotes, retailPrice, rentPrice, available, color, categoryId empty",
                                        "value": {
                                            "status": "fail",
                                            "message": "Validation error",
                                            "errors": [
                                                {
                                                    "field": "productName",
                                                    "message": "Product name is required"
                                                },
                                                {
                                                    "field": "imgProduct",
                                                    "message": "Product image is required"
                                                },
                                                {
                                                    "field": "description",
                                                    "message": "Description is required"
                                                },
                                                {
                                                    "field": "styleNotes",
                                                    "message": "Style notes is required"
                                                },
                                                {
                                                    "field": "retailPrice",
                                                    "message": "Retail price is required"
                                                },
                                                {
                                                    "field": "rentPrice",
                                                    "message": "Rent price is required"
                                                },
                                                {
                                                    "field": "available",
                                                    "message": "Available is required"
                                                },
                                                {
                                                    "field": "color",
                                                    "message": "Color is required"
                                                },
                                                {
                                                    "field": "categoryId",
                                                    "message": "Category id is required"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorUserNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Products"],
                "summary": "Delete product by product id",
                "description": "Delete product by spesific product id. Owner only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted product data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "Product 1": {
                                        "description": "Sample product 1",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted product 1 data successfully",
                                            "data": {
                                                "id": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66"
                                            }
                                        }
                                    },
                                    "Product 2": {
                                        "description": "Sample product 2",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted product 2 data successfully",
                                            "data": {
                                                "id": "57826a0c-c803-4d79-8707-5e8174c6eba3"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/search/name": {
            "get": {
                "tags": ["Search"],
                "summary": "Search product by name",
                "description": "Search product by name",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search name product by query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search product data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/search/image": {
            "get": {
                "tags": ["Search"],
                "summary": "Search product by upload image",
                "description": "Search product by upload image",
                "parameters": [
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Search image product by query",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search product data successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/carts/{userId}": {
            "get": {
                "tags": ["Carts"],
                "summary": "Get all carts by user id",
                "description": "Get all carts by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved cart data by id user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetCartUserId"
                                },
                                "examples": {
                                    "Cart 1": {
                                        "description": "Sample cart 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get cart by id",
                                            "data": {
                                                "cart": {
                                                    "id": "0fcf65ac-fe74-4eca-9d18-07f84674efc1",
                                                    "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                    "productId": ["86b0a4b1-4d58-44e2-bffa-2a9fd659ce66","57826a0c-c803-4d79-8707-5e8174c6eba3"],
                                                    "rentalStartDate": "2024-06-04",
                                                    "rentalEndDate": "2024-06-08",
                                                    "rentalTime": 4,
                                                    "delivery": "J&T Express",
                                                    "deliveryPrice": 20000,
                                                    "paymentDate": "2024-05-31T13:20:20Z",
                                                    "amount": 440000,
                                                    "cardNumber": "4484 9606 0904 6166",
                                                    "cardExpiry": "07/28",
                                                    "cardCVV": "756"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorCartNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": ["carts"],
                "summary": "Update product cart by user id",
                "description": "Update product cart by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }  
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCart"
                            },
                            "examples": {
                                "Cart 1": {
                                    "description": "Update cart 1",
                                    "value": {
                                        "rentalStartDate": "2024-06-03",
                                        "rentalEndDate": "2024-06-07",
                                        "rentalTime": 4,
                                        "delivery": "J&T Express",
                                        "paymentDate": "2024-05-30T13:20:20Z",
                                        "cardNumber": "4567 7746 4844 1563",
                                        "cardExpiry": "09/28",
                                        "cardCVV": "595"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update product cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "Cart 1": {
                                        "description": "Success to update product cart",
                                        "value": {
                                            "status": "success",
                                            "message": "Product cart updated successfully",
                                            "data": {
                                                "id": "0fcf65ac-fe74-4eca-9d18-07f84674efc1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Update product cart failed, validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail"
                                },
                                "examples": {
                                    "rentalStartDate, rentalEndDate, rentalTime, delivery, paymentDate, cardNumber, cardExpiry, cardCVV empty": {
                                        "description": "Failed to update product cart because rentalStartDate, rentalEndDate, rentalTime, delivery, paymentDate, cardNumber, cardExpiry, cardCVV empty",
                                        "value": {
                                            "status": "fail",
                                            "message": "Validation error",
                                            "errors": [
                                                {
                                                    "field": "rentalStartDate",
                                                    "message": "rentalStartDate is required"
                                                },
                                                {
                                                    "field": "rentalEndDate",
                                                    "message": "rentalEndDate is required"
                                                },
                                                {
                                                    "field": "rentalTime",
                                                    "message": "rentalTime is required"
                                                },
                                                {
                                                    "field": "delivery",
                                                    "message": "delivery is required"
                                                },
                                                {
                                                    "field": "paymentDate",
                                                    "message": "paymentDate is required"
                                                },
                                                {
                                                    "field": "cardNumber",
                                                    "message": "cardNumber is required"
                                                },
                                                {
                                                    "field": "cardExpiry",
                                                    "message": "cardExpiry is required"
                                                },
                                                {
                                                    "field": "cardCVV",
                                                    "message": "cardCVV is required"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorCartNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/carts/{userId}/{productId}": {
            "post": {
                "tags": ["Carts"],
                "summary": "Add product to cart",
                "description": "Add product to cart by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddProductCart"
                            },
                            "examples": {
                                "Cart 1": {
                                    "description": "Add sample cart 1",
                                    "value": {
                                        "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                        "productId": ["86b0a4b1-4d58-44e2-bffa-2a9fd659ce66", "57826a0c-c803-4d79-8707-5e8174c6eba3"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Add product to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "Cart 1": {
                                        "description": "Success to add product to cart",
                                        "value": {
                                            "status": "success",
                                            "message": "Product add to cart successfully",
                                            "data": {
                                                "id": "0fcf65ac-fe74-4eca-9d18-07f84674efc1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Carts"],
                "summary": "Delete product from cart",
                "description": "Delete product from cart by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted product from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDeleteProductCart"
                                },
                                "examples": {
                                    "Cart 1": {
                                        "description": "Sample cart 1",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted product 1 from cart successfully",
                                            "data": {
                                                "id": "0fcf65ac-fe74-4eca-9d18-07f84674efc1",
                                                "productId": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rents/{userId}": {
            "get": {
                "tags": ["Rents"],
                "summary": "Get all rents by user id,",
                "description": "Get all rents by spesific user id. For user and owner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved rent data by id user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetRentUserId"
                                },
                                "examples": {
                                    "Rent 1": {
                                        "description": "Sample rent 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get rent by user id",
                                            "data": {
                                                "rent": {
                                                    "cartId": "0fcf65ac-fe74-4eca-9d18-07f84674efc1",
                                                    "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                    "userType": "user",
                                                    "status": "In Progress"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorCartNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/Wishlists/{userId}": {
            "get": {
                "tags": ["Wishlists"],
                "summary": "Get all wishlists by user id",
                "description": "Get all wishlists by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve wishlist data by id user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetWishlists"
                                },
                                "examples": {
                                    "Wishlists": {
                                        "description": "Sample wishlist 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get wishlist data by user id",
                                            "data": {
                                                "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                "productId": ["86b0a4b1-4d58-44e2-bffa-2a9fd659ce66", "57826a0c-c803-4d79-8707-5e8174c6eba3"]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorWishlistNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/Wishlists/{userId}/{productId}": {
            "post": {
                "tags": ["Wishlists"],
                "summary": "Add product to wishlist",
                "description": "Add product to wishlist by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddWishlist"
                            },
                            "examples": {
                                "Wishlist 1": {
                                    "description": "Add sample wishlist 1",
                                    "value": {
                                        "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                        "productId": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66"
                                    }
                                },
                                "Wishlist 2": {
                                    "description": "Add sample wishlist 2",
                                    "value": {
                                        "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                        "productId": "57826a0c-c803-4d79-8707-5e8174c6eba3"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Add product to wishlist successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success"
                                },
                                "examples": {
                                    "Wishlist": {
                                        "description": "Success to add product to wishlist",
                                        "value": {
                                            "status": "success",
                                            "message": "Product add to wishlist successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Wishlists"],
                "summary": "Delete product from wishlist",
                "description": "Delete product from wishlist by spesific user id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted product from wishlist successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success"
                                },
                                "examples": {
                                    "Wishlist": {
                                        "description": "Success to delete product from wishlist",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted product from wishlist successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorWishlistNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reviews/{productId}": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all reviews by product id",
                "description": "Get all reviews by spesific product id. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve review data by id product successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessGetReviews"
                                },
                                "examples": {
                                    "Reviews": {
                                        "description": "Sample review 1",
                                        "value": {
                                            "status": "success",
                                            "message": "Get review data by product id",
                                            "data": [
                                                {
                                                    "id": "fa268e68-40e0-4acf-83a0-29f5ff152b00",
                                                    "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                                    "productId": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66",
                                                    "rating": 5,
                                                    "comment": "Good product, I like it and fit for me."
                                                },
                                                {
                                                    "id": "eacdc8fa-3375-4178-8dd9-1fd596c387d2",
                                                    "userId": "df9014c8-7dec-41bc-9d10-4190555efd69",
                                                    "productId": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66",
                                                    "rating": 4,
                                                    "comment": "Delivery is little bit late, but the product is good."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorReviewNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reviews/{userId}/{productId}": {
            "post": {
                "tags": ["Reviews"],
                "summary": "Add review to product",
                "description": "Add review to product by spesific user. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddReview"
                            },
                            "examples": {
                                "Review 1": {
                                    "description": "Add sample review 1",
                                    "value": {
                                        "userId": "b65c17ae-2194-42fe-8501-e51a3e23384a",
                                        "productId": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66",
                                        "rating": 5,
                                        "comment": "Good product, I like it and fit for me."
                                    }
                                },
                                "Review 2": {
                                    "description": "Add sample review 2",
                                    "value": {
                                        "userId": "df9014c8-7dec-41bc-9d10-4190555efd69",
                                        "productId": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66",
                                        "rating": 4,
                                        "comment": "Delivery is little bit late, but the product is good."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Add review to product successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "Review 1": {
                                        "description": "Success to add review to product",
                                        "value": {
                                            "status": "success",
                                            "message": "Review add to product successfully",
                                            "data": {
                                                "id": "fa268e68-40e0-4acf-83a0-29f5ff152b00"
                                            }
                                        }
                                    },
                                    "Review 2": {
                                        "description": "Success to add review to product",
                                        "value": {
                                            "status": "success",
                                            "message": "Review add to product successfully",
                                            "data": {
                                                "id": "eacdc8fa-3375-4178-8dd9-1fd596c387d2"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorProductNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Reviews"],
                "summary": "Delete review from product",
                "description": "Delete review from product by spesific user. User only",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/ProductId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted review from product successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessRegisterUser"
                                },
                                "examples": {
                                    "Review 1": {
                                        "description": "Sample review 1",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted review 1 from product successfully",
                                            "data": {
                                                "id": "fa268e68-40e0-4acf-83a0-29f5ff152b00"
                                            }
                                        }
                                    },
                                    "Review 2": {
                                        "description": "Sample review 2",
                                        "value": {
                                            "status": "success",
                                            "message": "deleted review 2 from product successfully",
                                            "data": {
                                                "id": "eacdc8fa-3375-4178-8dd9-1fd596c387d2"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/MiddlewareUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/MiddlewareForbiddenError"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorReviewNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "refreshToken"
            }
        },
        "parameters": {
            "UserId": {
                "name": "userId",
                "in": "path",
                "description": "Retrieve user id",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "examples": {
                    "User 1": {
                        "description": "Sample user id for user 1",
                        "value": "b65c17ae-2194-42fe-8501-e51a3e23384a"
                    },
                    "Owner 1": {
                        "description": "Sample user id for owner 1",
                        "value" : "62e6dfe3-2337-4b09-ae48-a565c9e716dc"
                    }
                }
            },
            "ProductId": {
                "name": "productId",
                "in": "path",
                "description": "Retrieve product id",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "examples": {
                    "Product 1": {
                        "description": "Sample product id for product 1",
                        "value": "86b0a4b1-4d58-44e2-bffa-2a9fd659ce66"
                    },
                    "Product 2": {
                        "description": "Sample product id for product 2",
                        "value": "57826a0c-c803-4d79-8707-5e8174c6eba3"
                    }
                }
            },
            "CategoryId": {
                "name": "categoryId",
                "in": "path",
                "description": "Retrieve category id",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "examples": {
                    "Category 1": {
                        "description": "Sample category id for category 1",
                        "value": "d44fd310-0fd4-422e-b77f-026abdd131f8"
                    },
                    "Category 2": {
                        "description": "Sample category id for category 2",
                        "value": "1d406a46-5ebf-4c1f-b270-06759cf6e3fa"
                    }
                }
            }
        },
        "schemas": {
            "Success": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Fail": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "addressDetail": {
                        "type": "string"
                    },
                    "province": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RegisterUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "required": ["true"]
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minimum": 8,
                        "required": ["true"]
                    },
                    "userType": {
                        "type": "string",
                        "required": ["true"]
                    }
                }
            },
            "SuccessRegisterUser": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "LoginUser": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "required": ["true"]
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minimum": 8,
                        "required": ["true"]
                    },
                    "userType": {
                      "type": "string",
                      "required": ["true"]
                    }
                }
            },
            "SuccessLoginUser": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "accessToken": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    },
                                    "userType": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "GetUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "addressDetail": {
                        "type": "string"
                    },
                    "province": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "SuccessGetAllUser": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/GetUser"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "SuccessGetUserId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/GetUser"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "UpdateUserId": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "addressDetail": {
                        "type": "string"
                    },
                    "province": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "SuccessUpdateUserId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/UpdateUserId"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "ownerName": {
                        "type": "string"
                    },
                    "imgProduct": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "binary"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "styleNotes" : {
                        "type": "string"
                    },
                    "retailPrice": {
                        "type": "integer"
                    },
                    "rentPrice": {
                        "type": "integer"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "color": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "AddProduct": {
                "type": "object",
                "properties": {
                    "productName": {
                        "type": "string",
                        "required": ["true"]
                    },
                    "imgProduct": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "binary",
                          "required": ["true"]
                        }
                    },
                    "ownerName": {
                        "type": "string",
                        "required": ["true"]
                    },
                    "description": {
                        "type": "string",
                        "required": ["true"]
                    },
                    "styleNotes" : {
                        "type": "string"
                    },
                    "retailPrice": {
                        "type": "integer",
                        "minimum": 5,
                        "required": ["true"]
                    },
                    "rentPrice": {
                        "type": "integer",
                        "minimum": 5,
                        "required": ["true"]
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "color": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string",
                        "required": ["true"]
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "SuccessGetAllProduct": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "SuccessGetProductId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "product": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "ProductOwner": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                    }
                }
            },
            "SuccessGetProductOwnerId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "product": {
                                        "$ref": "#/components/schemas/ProductOwner"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "UpdateProductId": {
                "type": "object",
                "properties": {
                    "productName": {
                        "type": "string"
                    },
                    "imgProduct": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "binary"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "styleNotes" : {
                        "type": "string"
                    },
                    "retailPrice": {
                        "type": "integer"
                    },
                    "rentPrice": {
                        "type": "integer"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "color": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    }
                }
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "categoriesName": {
                        "type": "string"
                    }
                }
            },
            "SuccessGetCategoryId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "category": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "Cart": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                    },
                    "rentalStartDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "rentalEndDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "rentalTime": {
                        "type": "integer"
                    },
                    "delivery": {
                        "type": "string"
                    },
                    "deliveryPrice": {
                        "type": "integer"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "amount": {
                        "type": "integer"
                    },
                    "cardNumber": {
                        "type": "string"
                    },
                    "cardExpiry": {
                        "type": "string"
                    },
                    "cardCVV": {
                        "type": "string"
                    }
                }
            },
            "SuccessGetCartUserId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "carts": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Cart"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "UpdateCart": {
                "type": "object",
                "properties": {
                    "rentalStartDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "rentalEndDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "rentalTime": {
                        "type": "integer"
                    },
                    "delivery": {
                        "type": "string"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cardNumber": {
                        "type": "string"
                    },
                    "cardExpiry": {
                        "type": "string"
                    },
                    "cardCVV": {
                        "type": "string"
                    }
                }
            },
            "SuccessUpdateCartUserId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "cart": {
                                        "$ref": "#/components/schemas/UpdateCart"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "AddProductCart": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                    }
                }
            },
            "SuccessDeleteProductCart": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "productId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "SuccessGetRentUserId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cartId": {
                                "type": "string"
                            },
                            "userId": {
                                "type": "string"
                            },
                            "userType": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "SuccessGetRentOwnerId": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cartId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "AddWishlist": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                    }
                }
            },
            "SuccessGetWishlists": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "wishlists": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/AddWishlist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "AddReview": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5
                    },
                    "comment": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SuccessGetReviews": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Success"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "reviews": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/AddReview"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "responses": {
            "MiddlewareUnauthorizedError": {
                "description": "Fail to pass through middleware because the request header not provide Authorization Bearer",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized. Please provide Bearer `accessToken` on Authorization Header"
                                }
                            }
                        }
                    }
                }
            },
            "MiddlewareForbiddenError": {
                "description": "Fail to pass through middleware because can't decode or comapre token with secret",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Forbidden. Can't decode or compare token with secret"
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Internal server error"
                                }
                            }
                        }
                    }
                }
            },
            "ErrorUserNotFound": {
                "description": "User not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    }
                }
            },
            "ErrorProductNotFound": {
                "description": "Product not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Product not found"
                                }
                            }
                        }
                    }
                }
            },
            "ErrorCategoryNotFound": {
                "description": "Category not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Category not found"
                                }
                            }
                        }
                    }
                }
            },
            "ErrorCartNotFound": {
                "description": "Cart not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Cart not found"
                                }
                            }
                        }
                    }
                }
            },
            "ErrorWishlistNotFound": {
                "description": "Wishlist not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Wishlist not found"
                                }
                            }
                        }
                    }
                }
            },
            "ErrorReviewNotFound": {
                "description": "Review not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "fail"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Review not found"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
